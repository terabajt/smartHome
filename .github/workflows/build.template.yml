name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - feat
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - feat

jobs:
  CheckLint:
  displayName: 'Run linter and prettier'
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - checkout: self
      fetchDepth: 0
    - task: NodeTool@0
      displayName: 'Install node'
      inputs:
        versionSpec: '20.12.2'
        checkLatest: true
    - script: |
        npm ci
      displayName: 'Install dependencies'
    - script: |
        npm run lint:check
      displayName: 'Lint check'
    - script: |
       npm run format:check
    displayName: 'Prettier check'

  RunTests:
    displayName: 'Run unit tests'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - task: NodeTool@0
        displayName: 'Install node'
        inputs:
          versionSpec: '20.12.2'
          checkLatest: true
      - script: |
          npm ci
        displayName: 'Install dependencies'
      - script: |
          npm run test
        displayName: 'Run unit tests'
      - task: PublishTestResults@2
        displayName: 'Publish unit test results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/test-report.xml'
          testRunTitle: 'Jest Unit Tests'
          mergeTestResults: true
          failTaskOnFailedTests: true

  BuildAndPublish:
    displayName: 'Build and publish'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - task: NodeTool@0
        displayName: 'Install node'
        inputs:
          versionSpec: '20.12.2'
          checkLatest: true
      - script: |
          npm ci
        displayName: 'Install dependencies'
      - script: |
          echo NX_APP_URL='/' > .env
          echo VITE_BUILD_VERSION_NUMBER='$(Build.BuildId)' >> .env
        displayName: 'Setup environment variables'
      - script: |
          npm run build
        displayName: 'Build'
      - task: ArchiveFiles@2
        displayName: 'Zip files'
        inputs:
          rootFolderOrFile: './dist/apps/smart'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true
      - task: PublishBuildArtifacts@1
        displayName: 'Publish'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'image-smart'
